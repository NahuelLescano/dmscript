#! /usr/bin/env bash

# dmenu prints the options in insensitive mode, 20 options and prompt it something.
dmenu="dmenu -i -l 10 -g 3 -p"

get_timestamp() {
    date '+%Y%m%d_%H%M%S'
}

cp2cb_maim() {
  case "$XDG_SESSION_TYPE" in
    'x11') xclip -selection clipboard -t image/png;;
    'wayland') wl-copy -t image/png;;
    *) err "Unknown display server";;
  esac
}

main() {
  local _maim_args=""
  local _file_type=""

  # Directory for screenshots
  maim_dir="${HOME}/Screenshots"
  maim_file_prefix="maim"

  declare -a modes=(
  "Fullscreen"
  "Active window"
  "Selected region"
  )

  # Get monitors and their settings for maim
  _displays=$(xrandr --listactivemonitors | awk '/+/ {print $4, $3}' | awk -F'[x/+* ]' '{print $1,$2"x"$4"+"$6"+"$7}')

  # Add monitor data
  IFS=$'\n'
  declare -A _display_mode
  for i in ${_displays}; do
    modes[${#modes[@]}]="${i%% *}"
    _display_mode[${i%% *}]="${i##* }"
  done
  unset IFS

  target=$(printf '%s\n' "${modes[@]}" | ${dmenu} 'Take screenshot of:' "$@") || exit 1
  case "$target" in
    'Fullscreen')
      _file_type="full"
    ;;
    'Active window')
      active_window=$(xdotool getactivewindow)
      _maim_args="-i ${active_window}"
      _file_type="window"
    ;;
    'Selected region')
      _maim_args="-s"
      _file_type="region"
    ;;
    *)
      _maim_args="-g ${_display_mode[${target}]}"
      _file_type="${target}"
    ;;
  esac

  delay=$(printf '%s\n' "$(seq 0 5)" | ${dmenu} 'Delay (in seconds):' "$@" ) || exit 1
  if [ ! "${delay}" -eq "0" ]; then
    _maim_args="${_maim_args} --delay=${delay}"
  else
    _maim_args="${_maim_args} --delay=0.5"
  fi

  _maim_args="${_maim_args} -q"
  local destination=( "File" "Clipboard" "Both" )
  dest=$(printf '%s\n' "${destination[@]}" | ${dmenu} 'Destination:' "$@" ) || exit 1
  case "$dest" in
    'File')
      maim ${_maim_args} "${maim_dir}/${maim_file_prefix}-${_file_type}-$(get_timestamp).png"
      notify-send "Saved Screenshot" "${maim_dir}/${maim_file_prefix}-${_file_type}-$(get_timestamp).png"
    ;;
    'Clipboard')
      maim ${_maim_args} | cp2cb_maim
      notify-send "Saved Screenshot" "Clipboard"
    ;;
    'Both')
      maim ${_maim_args} | tee "${maim_dir}/${maim_file_prefix}-${_file_type}-$(get_timestamp).png" | cp2cb_maim
      notify-send "Saved Screenshot" "${maim_dir}/${maim_file_prefix}-${_file_type}-$(get_timestamp).png And Clipboard"
    ;;
    *)
      exit 1
    ;;
  esac
}

main
